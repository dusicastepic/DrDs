/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forme.usluga;

import domen.TipUsluge;
import domen.Usluga;
import java.awt.Insets;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import model.ModelTabeleUsluga;
import poslovnalogika.Kontroler;

/**
 *
 * @author User
 */
public class FrmUsluga extends javax.swing.JFrame {

    ImageIcon pic;

    /**
     * Creates new form FrmUsluga
     */
    public FrmUsluga() {
        initComponents();
        sakrijPanel();
        ucitajListuTipovaUsluga();
        srediDugmad();
        srediTabeluUsluga();
        srediLabeleZaValidaciju();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLayeredPane2 = new javax.swing.JLayeredPane();
        jPanelNovaUsluga = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jComboBoxTipUsluga = new javax.swing.JComboBox();
        jTextFieldSifraUsluge = new javax.swing.JTextField();
        jTextFieldNazivUsluge = new javax.swing.JTextField();
        jTextFieldCenaUsluge = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaOpisUsluge = new javax.swing.JTextArea();
        jButtonSacuvajNakonIzmene = new javax.swing.JButton();
        jButtonSacuvaj = new javax.swing.JButton();
        jLabelCenaUslugeValidacija = new javax.swing.JLabel();
        jLabelNazivUslugeValidacija = new javax.swing.JLabel();
        jPanelTabelaUsluga = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableTabelaUsluga = new javax.swing.JTable();
        jTextFieldpretrazi = new javax.swing.JTextField();
        jButtonPretrazi = new javax.swing.JButton();
        jButtondodaj = new javax.swing.JButton();
        jButtonObrisi = new javax.swing.JButton();
        jButtonPretraga = new javax.swing.JButton();
        jButtonIzmeni = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanelNovaUsluga.setBorder(javax.swing.BorderFactory.createTitledBorder("Nova usluga"));
        jPanelNovaUsluga.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Šifra usluge");
        jPanelNovaUsluga.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 35, -1, -1));

        jLabel2.setText("Naziv usluge");
        jPanelNovaUsluga.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 81, -1, -1));

        jLabel3.setText("Opis usluge");
        jPanelNovaUsluga.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 121, -1, -1));

        jLabel4.setText("Cena usluge");
        jPanelNovaUsluga.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 159, -1, -1));

        jLabel5.setText("Tip usluge");
        jPanelNovaUsluga.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 210, -1, -1));

        jComboBoxTipUsluga.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBoxTipUsluga.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxTipUslugaActionPerformed(evt);
            }
        });
        jPanelNovaUsluga.add(jComboBoxTipUsluga, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 200, 380, 30));

        jTextFieldSifraUsluge.setEnabled(false);
        jPanelNovaUsluga.add(jTextFieldSifraUsluge, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 30, 380, 30));

        jTextFieldNazivUsluge.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextFieldNazivUslugeCaretUpdate(evt);
            }
        });
        jTextFieldNazivUsluge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldNazivUslugeActionPerformed(evt);
            }
        });
        jTextFieldNazivUsluge.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldNazivUslugeKeyTyped(evt);
            }
        });
        jPanelNovaUsluga.add(jTextFieldNazivUsluge, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 70, 380, 30));

        jTextFieldCenaUsluge.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextFieldCenaUslugeCaretUpdate(evt);
            }
        });
        jTextFieldCenaUsluge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldCenaUslugeActionPerformed(evt);
            }
        });
        jTextFieldCenaUsluge.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldCenaUslugeKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldCenaUslugeKeyTyped(evt);
            }
        });
        jPanelNovaUsluga.add(jTextFieldCenaUsluge, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 160, 380, 30));

        jTextAreaOpisUsluge.setColumns(20);
        jTextAreaOpisUsluge.setRows(5);
        jScrollPane1.setViewportView(jTextAreaOpisUsluge);

        jPanelNovaUsluga.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 110, 381, 40));

        jButtonSacuvajNakonIzmene.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Button-Ok-icon.png"))); // NOI18N
        jButtonSacuvajNakonIzmene.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSacuvajNakonIzmeneActionPerformed(evt);
            }
        });
        jPanelNovaUsluga.add(jButtonSacuvajNakonIzmene, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 250, 30, 30));

        jButtonSacuvaj.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Button-Ok-icon.png"))); // NOI18N
        jButtonSacuvaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSacuvajActionPerformed(evt);
            }
        });
        jPanelNovaUsluga.add(jButtonSacuvaj, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 250, 30, 30));

        jLabelCenaUslugeValidacija.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/kensl.png"))); // NOI18N
        jPanelNovaUsluga.add(jLabelCenaUslugeValidacija, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 160, -1, -1));

        jLabelNazivUslugeValidacija.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/kensl.png"))); // NOI18N
        jPanelNovaUsluga.add(jLabelNazivUslugeValidacija, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 70, -1, -1));

        jTableTabelaUsluga.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(jTableTabelaUsluga);

        javax.swing.GroupLayout jPanelTabelaUslugaLayout = new javax.swing.GroupLayout(jPanelTabelaUsluga);
        jPanelTabelaUsluga.setLayout(jPanelTabelaUslugaLayout);
        jPanelTabelaUslugaLayout.setHorizontalGroup(
            jPanelTabelaUslugaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTabelaUslugaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 1297, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(544, Short.MAX_VALUE))
        );
        jPanelTabelaUslugaLayout.setVerticalGroup(
            jPanelTabelaUslugaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTabelaUslugaLayout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 156, Short.MAX_VALUE))
        );

        jTextFieldpretrazi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldpretraziActionPerformed(evt);
            }
        });
        jTextFieldpretrazi.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldpretraziKeyPressed(evt);
            }
        });

        jButtonPretrazi.setText("Pretraži");
        jButtonPretrazi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPretraziActionPerformed(evt);
            }
        });

        jLayeredPane2.setLayer(jPanelNovaUsluga, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(jPanelTabelaUsluga, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(jTextFieldpretrazi, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(jButtonPretrazi, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane2Layout = new javax.swing.GroupLayout(jLayeredPane2);
        jLayeredPane2.setLayout(jLayeredPane2Layout);
        jLayeredPane2Layout.setHorizontalGroup(
            jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane2Layout.createSequentialGroup()
                .addContainerGap(26, Short.MAX_VALUE)
                .addComponent(jPanelNovaUsluga, javax.swing.GroupLayout.PREFERRED_SIZE, 532, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanelTabelaUsluga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(jLayeredPane2Layout.createSequentialGroup()
                .addGap(107, 107, 107)
                .addComponent(jTextFieldpretrazi, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButtonPretrazi)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jLayeredPane2Layout.setVerticalGroup(
            jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane2Layout.createSequentialGroup()
                .addContainerGap(161, Short.MAX_VALUE)
                .addComponent(jPanelTabelaUsluga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jLayeredPane2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldpretrazi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonPretrazi))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanelNovaUsluga, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jButtondodaj.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/pluskebab.png"))); // NOI18N
        jButtondodaj.setBorder(null);
        jButtondodaj.setBorderPainted(false);
        jButtondodaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtondodajActionPerformed(evt);
            }
        });

        jButtonObrisi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/edit_clear (1).png"))); // NOI18N
        jButtonObrisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonObrisiActionPerformed(evt);
            }
        });

        jButtonPretraga.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/webdev-search-icon48.png"))); // NOI18N
        jButtonPretraga.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPretragaActionPerformed(evt);
            }
        });

        jButtonIzmeni.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/modify--document-icon-44504.png"))); // NOI18N
        jButtonIzmeni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonIzmeniActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(jButtondodaj, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addComponent(jButtonPretraga)
                        .addGap(41, 41, 41)
                        .addComponent(jButtonIzmeni, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47)
                        .addComponent(jButtonObrisi, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLayeredPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButtonPretraga)
                            .addComponent(jButtondodaj)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButtonObrisi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonIzmeni, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(26, 26, 26)
                .addComponent(jLayeredPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtondodajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtondodajActionPerformed
        obrisiSveIzForme();
        pic = new ImageIcon(getClass().getResource("/img/kensl.png"));
        jPanelNovaUsluga.setVisible(true);
        jPanelTabelaUsluga.setVisible(false);
        jButtonObrisi.setVisible(false);
        jButtonIzmeni.setVisible(false);
        jButtonSacuvaj.setVisible(true);
        jButtonSacuvajNakonIzmene.setVisible(false);
        jLabelNazivUslugeValidacija.setIcon(pic);
        jLabelCenaUslugeValidacija.setIcon(pic);
        jTextFieldpretrazi.setVisible(false);
        jButtonPretrazi.setVisible(false);
        srediLabeleZaValidaciju();
    }//GEN-LAST:event_jButtondodajActionPerformed

    private void jComboBoxTipUslugaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxTipUslugaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxTipUslugaActionPerformed

    private void jButtonSacuvajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSacuvajActionPerformed
        boolean uspesno = false;
        int odg = JOptionPane.showConfirmDialog(this, "Da li ste sigurni da želite da sačuvate?", "Obaveštenje", JOptionPane.YES_NO_CANCEL_OPTION);

        int sifraUsluge = Integer.parseInt(jTextFieldSifraUsluge.getText());

        String nazivUsluge = jTextFieldNazivUsluge.getText();
        if (nazivUsluge.length() == 0) {
            JOptionPane.showMessageDialog(this, "Naziv usluge je obavezan!", "Greška", JOptionPane.ERROR_MESSAGE);
            //   jTextFieldNazivUsluge.requestFocusInWindow();
            return;
        }

        String opisUsluge = jTextAreaOpisUsluge.getText();
        if (opisUsluge.length() > 255) {
            JOptionPane.showMessageDialog(this, "Opis usluge ne može biti duži od 255 karaktera!", "Greška", JOptionPane.ERROR_MESSAGE);
            jTextAreaOpisUsluge.requestFocusInWindow();
            return;
        }
        if (jTextFieldCenaUsluge.getText().length() == 0) {
            JOptionPane.showMessageDialog(this, "Cena usluge je obavezna!", "Greška", JOptionPane.ERROR_MESSAGE);
            //     jTextFieldCenaUsluge.requestFocusInWindow();
            return;
        }
        if (!proveriCifre()) {
            JOptionPane.showMessageDialog(this, "Cena usluge može sadržati brojeve samo!", "Greška", JOptionPane.ERROR_MESSAGE);
            // jTextFieldCenaUsluge.requestFocusInWindow();
            return;
        }
        Double cenaUsluge = Double.parseDouble(jTextFieldCenaUsluge.getText());
        TipUsluge tu = (TipUsluge) jComboBoxTipUsluga.getSelectedItem();

        if (jComboBoxTipUsluga.getSelectedIndex() == -1) {
            JOptionPane.showMessageDialog(this, "Tip usluge je obavezan!", "Greška", JOptionPane.ERROR_MESSAGE);
            jComboBoxTipUsluga.requestFocusInWindow();
            return;
        }
        Usluga u = new Usluga(sifraUsluge, nazivUsluge, opisUsluge, cenaUsluge, tu);
        switch (odg) {
            case 0:

                ModelTabeleUsluga mtu = (ModelTabeleUsluga) jTableTabelaUsluga.getModel();
                mtu.dodaj(u);
                uspesno = Kontroler.getInstance().sacuvajUslugu(u);
//                prikaziSveUTabeli();

        }
        if (uspesno) {
            JOptionPane.showMessageDialog(this, "Uspešno je sačuvana usluga!", "Obaveštenje", JOptionPane.INFORMATION_MESSAGE);
            jPanelNovaUsluga.setVisible(false);
            prikaziTabeluUsluga();
            jButtonObrisi.setVisible(true);
            jButtonIzmeni.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "Usluga nije sačuvana!", "Obaveštenje", JOptionPane.ERROR_MESSAGE);
        }

        jButtonPretrazi.setVisible(true);
        jTextFieldpretrazi.setVisible(true);
    }//GEN-LAST:event_jButtonSacuvajActionPerformed

    private void jButtonObrisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonObrisiActionPerformed

        try {
            int red = jTableTabelaUsluga.getSelectedRow();

            //  JFrame dijalogZApotvrdu=new JFrame();
            String[] opcije = {"Da", "Ne"};

            int odg = JOptionPane.showOptionDialog(this, "Da li ste sigurni da želite da obrišete?", "Obaveštenje", 0, JOptionPane.INFORMATION_MESSAGE, null, opcije, null);

            if (odg == 0) {

                ModelTabeleUsluga mtu = (ModelTabeleUsluga) jTableTabelaUsluga.getModel();
                mtu.obrisi(red);

            }
        } catch (ArrayIndexOutOfBoundsException e) {
            JOptionPane.showMessageDialog(this, "Niste selektovali uslugu koju želite da obrišete!", "Greška", JOptionPane.ERROR_MESSAGE);
            return;
        } catch (Exception e2) {
            JOptionPane.showMessageDialog(this, "Greška u upitu!", "Greška", JOptionPane.ERROR_MESSAGE);
            return;
        }
        obrisiSveIzForme();

    }//GEN-LAST:event_jButtonObrisiActionPerformed

    private void jButtonPretragaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPretragaActionPerformed
        jTextFieldpretrazi.setText("");
        jPanelTabelaUsluga.setVisible(true);
        jPanelNovaUsluga.setVisible(false);
        jButtonObrisi.setVisible(true);
        jButtonIzmeni.setVisible(true);
        jButtonPretrazi.setVisible(true);
        jTextFieldpretrazi.setVisible(true);
    }//GEN-LAST:event_jButtonPretragaActionPerformed

    private void jButtonIzmeniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonIzmeniActionPerformed
        pic = new ImageIcon(getClass().getResource("/img/ok.png"));
        jButtonSacuvaj.setVisible(false);
        jButtonSacuvajNakonIzmene.setVisible(true);
//        jTextFieldpretrazi.setVisible(false);
//        jButtonPretrazi.setVisible(false);

        jLabelCenaUslugeValidacija.setIcon(pic);
        jLabelNazivUslugeValidacija.setIcon(pic);
//        pic = new ImageIcon(getClass().getResource("/img/kensl.png"));
        try {
            int red = jTableTabelaUsluga.getSelectedRow();
            ModelTabeleUsluga mtu = (ModelTabeleUsluga) jTableTabelaUsluga.getModel();
            ArrayList<Usluga> listaUslugaIzTabele = mtu.vratiListuUsluga();
            Usluga u = listaUslugaIzTabele.get(red);
            jTextFieldSifraUsluge.setText("" + u.getSifraUsluge());
            jTextFieldNazivUsluge.setText(u.getNazivUsluge());
            jTextAreaOpisUsluge.setText(u.getOpisUsluge());
            jTextFieldCenaUsluge.setText("" + u.getCenaUsluge());
            jComboBoxTipUsluga.setSelectedItem(u.getTu());
        } catch (Exception e) {
            {
                JOptionPane.showMessageDialog(this, "Niste selektovali uslugu koju želite da izmenite!");
                return;
            }
        }

        jPanelTabelaUsluga.setVisible(false);
        srediLabeleZaValidaciju();
        jTextFieldpretrazi.setVisible(false);
        jButtonPretrazi.setVisible(false);
        jPanelNovaUsluga.setVisible(true);


    }//GEN-LAST:event_jButtonIzmeniActionPerformed

    private void jButtonSacuvajNakonIzmeneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSacuvajNakonIzmeneActionPerformed
        int red = jTableTabelaUsluga.getSelectedRow();
        ModelTabeleUsluga mtu = (ModelTabeleUsluga) jTableTabelaUsluga.getModel();

        String nazivUsluge = jTextFieldNazivUsluge.getText();
        if (nazivUsluge.length() == 0) {
            JOptionPane.showMessageDialog(this, "Naziv usluge je obavezan!", "Greška", JOptionPane.ERROR_MESSAGE);
            //    jTextFieldNazivUsluge.requestFocusInWindow();
            return;
        }

        String opisUsluge = jTextAreaOpisUsluge.getText();
        if (opisUsluge.length() > 255) {
            JOptionPane.showMessageDialog(this, "Opis usluge ne može biti duži od 255 karaktera!", "Greška", JOptionPane.ERROR_MESSAGE);
            //   jTextAreaOpisUsluge.requestFocusInWindow();
            return;
        }
        if (jTextFieldCenaUsluge.getText().length() == 0) {
            JOptionPane.showMessageDialog(this, "Cena usluge je obavezna!", "Greška", JOptionPane.ERROR_MESSAGE);
            //    jTextFieldCenaUsluge.requestFocusInWindow();
            return;
        }
        if (!proveriCifre()) {
            JOptionPane.showMessageDialog(this, "Cena usluge ne može imati slova!", "Greška", JOptionPane.ERROR_MESSAGE);
//            jTextFieldCenaUsluge.requestFocusInWindow();
            return;
        }
        int sifraUsluge = Integer.parseInt(jTextFieldSifraUsluge.getText());
        Double cenaUsluge = Double.parseDouble(jTextFieldCenaUsluge.getText());
        TipUsluge tu = (TipUsluge) jComboBoxTipUsluga.getSelectedItem();
        Usluga usluga = new Usluga(sifraUsluge, nazivUsluge, opisUsluge, cenaUsluge, tu);

        mtu.izmeniRed(red, usluga);
        mtu.dodaj(usluga);
        jPanelNovaUsluga.setVisible(false);
        jPanelTabelaUsluga.setVisible(true);
        jButtonPretrazi.setVisible(true);
        jTextFieldpretrazi.setVisible(true);


    }//GEN-LAST:event_jButtonSacuvajNakonIzmeneActionPerformed

    private void jTextFieldNazivUslugeCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextFieldNazivUslugeCaretUpdate
        jLabelNazivUslugeValidacija.setVisible(true);
    }//GEN-LAST:event_jTextFieldNazivUslugeCaretUpdate

    private void jTextFieldCenaUslugeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldCenaUslugeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldCenaUslugeActionPerformed

    private void jTextFieldCenaUslugeCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextFieldCenaUslugeCaretUpdate
        jLabelCenaUslugeValidacija.setVisible(true);


    }//GEN-LAST:event_jTextFieldCenaUslugeCaretUpdate

    private void jTextFieldCenaUslugeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldCenaUslugeKeyTyped
        String c = evt.getKeyChar() + "";
//        if (c=='.') {
//            return;
//        }
//         if (!Character.isDigit(c)) {
//            getToolkit().beep();
//            evt.consume();
//            
//        }
        String regex = "[a-zA-Z]";
        if (c.matches(regex)) {
            getToolkit().beep();
            evt.consume();
            return;
        }
        
//         String regex2 = "[';'',''!']";
//        if (c.matches(regex2)) {
//            getToolkit().beep();
//            evt.consume();
//            return;
//        }
        if (jTextFieldCenaUsluge.getText().isEmpty()) {
            pic = new ImageIcon(getClass().getResource("/img/kensl.png"));
            jLabelCenaUslugeValidacija.setIcon(pic);
            return;
        }

        if (proveriCifre()) {
            pic = new ImageIcon(getClass().getResource("/img/ok.png"));
            jLabelCenaUslugeValidacija.setIcon(pic);
        }
        else if (!proveriCifre()) {
            evt.consume();
            pic = new ImageIcon(getClass().getResource("/img/kensl.png"));
            jLabelCenaUslugeValidacija.setIcon(pic);
        }
    }//GEN-LAST:event_jTextFieldCenaUslugeKeyTyped

    private void jTextFieldNazivUslugeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldNazivUslugeKeyTyped
        pic = new ImageIcon(getClass().getResource("/img/kensl.png"));
        jLabelNazivUslugeValidacija.setIcon(pic);
        if (jTextFieldNazivUsluge.getText().isEmpty()) {
            pic = new ImageIcon(getClass().getResource("/img/kensl.png"));
            jLabelNazivUslugeValidacija.setIcon(pic);
        }
        if (jTextFieldNazivUsluge.getText().length() >= 1) {
            pic = new ImageIcon(getClass().getResource("/img/ok.png"));
            jLabelNazivUslugeValidacija.setIcon(pic);
        } else {
            pic = new ImageIcon(getClass().getResource("/img/kensl.png"));
            jLabelNazivUslugeValidacija.setIcon(pic);
        }
    }//GEN-LAST:event_jTextFieldNazivUslugeKeyTyped

    private void jTextFieldCenaUslugeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldCenaUslugeKeyPressed
//        String regexNe="[a-zA-Z]";
//        if (jTextFieldCenaUsluge.getText().matches(regexNe)) {
//            pic = new ImageIcon(getClass().getResource("/img/kensl.png"));
//            jLabCenaUslugeValidacija.setIcon(pic);
//        }
    }//GEN-LAST:event_jTextFieldCenaUslugeKeyPressed

    private void jTextFieldNazivUslugeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldNazivUslugeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldNazivUslugeActionPerformed

    private void jButtonPretraziActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPretraziActionPerformed

        String filterText = jTextFieldpretrazi.getText();
        ArrayList<Usluga> filterListaUsluga = Kontroler.getInstance().vratiListuUsluga(filterText);
        ModelTabeleUsluga mtu = new ModelTabeleUsluga(filterListaUsluga);
//        for (Usluga usluga : filterListaUsluga) {
//        mtu.dodaj(usluga);}
        jTableTabelaUsluga.setModel(mtu);

    }//GEN-LAST:event_jButtonPretraziActionPerformed

    private void jTextFieldpretraziActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldpretraziActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldpretraziActionPerformed

    private void jTextFieldpretraziKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldpretraziKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {

            String filterText = jTextFieldpretrazi.getText();
            ArrayList<Usluga> filterListaUsluga = Kontroler.getInstance().vratiListuUsluga(filterText);
            ModelTabeleUsluga mtu = new ModelTabeleUsluga(filterListaUsluga);
//        for (Usluga usluga : filterListaUsluga) {
//        mtu.dodaj(usluga);}
            jTableTabelaUsluga.setModel(mtu);
        }
    }//GEN-LAST:event_jTextFieldpretraziKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmUsluga.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmUsluga.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmUsluga.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmUsluga.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmUsluga().setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonIzmeni;
    private javax.swing.JButton jButtonObrisi;
    private javax.swing.JButton jButtonPretraga;
    private javax.swing.JButton jButtonPretrazi;
    private javax.swing.JButton jButtonSacuvaj;
    private javax.swing.JButton jButtonSacuvajNakonIzmene;
    private javax.swing.JButton jButtondodaj;
    private javax.swing.JComboBox jComboBoxTipUsluga;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabelCenaUslugeValidacija;
    private javax.swing.JLabel jLabelNazivUslugeValidacija;
    private javax.swing.JLayeredPane jLayeredPane2;
    private javax.swing.JPanel jPanelNovaUsluga;
    private javax.swing.JPanel jPanelTabelaUsluga;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTableTabelaUsluga;
    private javax.swing.JTextArea jTextAreaOpisUsluge;
    private javax.swing.JTextField jTextFieldCenaUsluge;
    private javax.swing.JTextField jTextFieldNazivUsluge;
    private javax.swing.JTextField jTextFieldSifraUsluge;
    private javax.swing.JTextField jTextFieldpretrazi;
    // End of variables declaration//GEN-END:variables

    private void sakrijPanel() {

        jPanelNovaUsluga.setVisible(false);
        jPanelTabelaUsluga.setVisible(false);
        jButtonObrisi.setVisible(false);
        jButtonIzmeni.setVisible(false);
        jButtonPretrazi.setVisible(false);
        jTextFieldpretrazi.setVisible(false);

    }

    private void ucitajListuTipovaUsluga() {

        ArrayList<TipUsluge> listaTipovaUsluga = Kontroler.getInstance().vratiListuTipovaUsluga();
        jComboBoxTipUsluga.removeAllItems();
        for (TipUsluge tipUsluge : listaTipovaUsluga) {
            jComboBoxTipUsluga.addItem(tipUsluge);
        }

    }

    private void srediDugmad() {

        jButtonObrisi.setBorderPainted(false);
        jButtonObrisi.setBorder(null);
        jButtonObrisi.setMargin(new Insets(0, 0, 0, 0));
        jButtonObrisi.setContentAreaFilled(false);
        jButtonObrisi.setBorder(null);

        jButtondodaj.setBorderPainted(false);
        jButtondodaj.setBorder(null);
        jButtondodaj.setMargin(new Insets(0, 0, 0, 0));
        jButtondodaj.setContentAreaFilled(false);
        jButtondodaj.setBorder(null);

        jButtonPretraga.setBorderPainted(false);
        jButtonPretraga.setBorder(null);
        jButtonPretraga.setMargin(new Insets(0, 0, 0, 0));
        jButtonPretraga.setContentAreaFilled(false);
        jButtondodaj.setBorder(null);

        jButtonIzmeni.setBorderPainted(false);
        jButtonIzmeni.setBorder(null);
        jButtonIzmeni.setMargin(new Insets(0, 0, 0, 0));
        jButtonIzmeni.setContentAreaFilled(false);
        jButtonIzmeni.setBorder(null);

    }

    private void prikaziTabeluUsluga() {
        jPanelTabelaUsluga.setVisible(true);
    }

    private void srediTabeluUsluga() {
        ModelTabeleUsluga mtu = new ModelTabeleUsluga();
        jTableTabelaUsluga.setModel(mtu);

    }

    private void obrisiSveIzForme() {
        jTextFieldSifraUsluge.setText("" + (Kontroler.getInstance().vratiID()));
        jTextFieldNazivUsluge.setText("");
        jTextAreaOpisUsluge.setText("");
        jTextFieldCenaUsluge.setText("");
        jComboBoxTipUsluga.setSelectedIndex(0);
    }

    private boolean proveriCifre() {

//  int br=0;
//        for (int i = 0; i < jTextFieldCenaUsluge.getText().length(); i++) {
//            if (!Character.isDigit(jTextFieldCenaUsluge.getText().charAt(i))) {
//                br++;
//            }
//            if (br>0) {
//                return false;
//            }
//        }
      //  String regex = "[1-9]+" + "'\'.?" + "[0-9]*";
      String regex="[0-9]+\\.?[0-9]*";

        String tekstCene = jTextFieldCenaUsluge.getText();
        if (tekstCene.matches(regex)) {

//            for (int i = 0; i < tekstCene.length(); i++) {
//                if (tekstCene.charAt(i) == '.') {
//                    break;
//                } else if (!Character.isDigit(jTextFieldCenaUsluge.getText().charAt(i))) {
//                    return false;
//                }
//
//            }
            return true;
        } 
else {
            return false;
        }
    }

    private void srediLabeleZaValidaciju() {
        jLabelCenaUslugeValidacija.setVisible(false);
        jLabelNazivUslugeValidacija.setVisible(false);
    }

//    private boolean proveriNaziv() {
//        String regex = "[A-Za-Z0-9]*";
//        if (!jTextFieldNazivUsluge.getText().matches(regex)) {
//            return false;
//        } else {
//            return true;
//        }
//
//    }

}
